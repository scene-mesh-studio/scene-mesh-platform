<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd http://www.springframework.org/schema/util https://www.springframework.org/schema/util/spring-util.xsd">

    <!-- spring 组件提供器 -->
    <bean id="componentProvider" class="com.scene.mesh.foundation.impl.component.SpringComponentProvider"/>

    <!-- 处理管理器 -->
    <bean id="processManager" class="com.scene.mesh.foundation.impl.processor.execute.DefaultProcessManager">
        <property name="executor" ref="executor"/>
    </bean>

    <!-- flink 执行器 -->
    <bean id="executor" class="com.scene.mesh.foundation.impl.processor.flink.FlinkProcessExecutor" init-method="__init__">
        <constructor-arg ref="componentProvider"/>
        <property name="webHost" value="127.0.0.1"/>
        <property name="webPort" value="8081"/>
    </bean>

    <!-- redis 缓存 -->
    <bean id="iCache" class="com.scene.mesh.foundation.impl.cache.RedisCache">
        <constructor-arg value="127.0.0.1"/>
        <constructor-arg value="6379"/>
    </bean>

    <!-- 场景存储库 -->
    <bean id="sceneRepository" class="com.scene.mesh.model.scene.MockSceneRepository">

    </bean>

    <!-- 事件元数据存储库 -->
    <bean id="metaEventRepository" class="com.scene.mesh.model.event.MockMetaEventRepository">

    </bean>

    <!-- 缓存服务 -->
    <bean id="mutableCache" class="com.scene.mesh.service.api.cache.MutableCacheService">
        <constructor-arg ref="iCache"/>
        <constructor-arg ref="sceneRepository"/>
        <constructor-arg ref="metaEventRepository"/>
    </bean>

    <bean id="sceneService" class="com.scene.mesh.service.impl.scene.SceneService">
        <constructor-arg ref="mutableCache"/>
    </bean>

    <!-- 消息消费者 -->
    <bean id="messageConsumer" class="com.scene.mesh.foundation.impl.message.RedisMessageConsumer"
          init-method="__init__">
        <property name="batchSize" value="10"/>
        <property name="host" value="localhost"/>
        <property name="port" value="6379"/>
        <property name="timeoutSeconds" value="1"/>
    </bean>

    <!-- 消息生产者 -->
    <bean id="messageProducer" class="com.scene.mesh.foundation.impl.message.RedisMessageProducer"
          init-method="__init__">
        <property name="host" value="localhost"/>
        <property name="port" value="6379"/>
    </bean>

    <bean id="agentOperator" class="com.scene.mesh.engin.processor.then.operator.AgentOperator">
        <constructor-arg>
            <list>
                <bean class="com.scene.mesh.service.impl.ai.model.zhipu.ZhiPuChatModel">
                    <constructor-arg value="58245a200b71437bbece2b85c71c844a.uJKQJvMhutDrPQPE"/>
                </bean>
            </list>
        </constructor-arg>
    </bean>

    <!-- 操作管理人 -->
    <bean id="operatorManager" class="com.scene.mesh.engin.processor.then.operator.OperatorManager">
        <constructor-arg>
            <list>
                <ref bean="agentOperator"/>
                <bean class="com.scene.mesh.engin.processor.then.operator.NonAgentOperator"/>
            </list>
        </constructor-arg>
    </bean>

    <!-- scene-match-graph -->
    <bean id="scene-event-producer" class="com.scene.mesh.engin.processor.when.EventProducer">
        <property name="env" value="dev"/>
        <property name="messageClass" value="com.scene.mesh.model.event.Event"/>
        <property name="messageConsumer" ref="messageConsumer"/>
        <property name="topicName" value="inbound_events"/>
    </bean>

    <bean id="scene-match-sinker" class="com.scene.mesh.engin.processor.when.EventSinker">
        <property name="topicName" value="matched_result"/>
        <property name="messageProducer" ref="messageProducer"/>
    </bean>

    <!-- scene-process-graph -->
    <bean id="matched-scene-producer" class="com.scene.mesh.engin.processor.then.MatchedSceneProducer">
        <property name="env" value="dev"/>
        <property name="messageClass" value="com.scene.mesh.engin.model.SceneMatchedResult"/>
        <property name="messageConsumer" ref="messageConsumer"/>
        <property name="topicName" value="matched_result"/>
    </bean>
    <bean id="scene-selector" class="com.scene.mesh.engin.processor.then.SceneSelector">
        <property name="env" value="dev"/>
        <property name="cacheService" ref="mutableCache"/>
        <property name="sceneService" ref="sceneService"/>
    </bean>
    <bean id="operation-handler" class="com.scene.mesh.engin.processor.then.OperationHandler">
        <constructor-arg ref="mutableCache"/>
        <constructor-arg ref="operatorManager"/>
    </bean>
    <bean id="action-sinker" class="com.scene.mesh.engin.processor.then.ActionSinker">
        <property name="topicName" value="action"/>
        <property name="messageProducer" ref="messageProducer"/>
    </bean>
</beans>